<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<display-name>opentdc services</display-name>
	<context-param>
		<param-name>AddressbookService.serviceProvider</param-name>
		<param-value>org.opentdc.addressbooks.file.FileServiceProvider</param-value>
	</context-param>
	<context-param>
		<param-name>RatesService.serviceProvider</param-name>
		<param-value>org.opentdc.rates.file.FileServiceProvider</param-value>
	</context-param>
	<context-param>
		<param-name>ResourcesService.serviceProvider</param-name>
		<param-value>org.opentdc.resources.file.FileServiceProvider</param-value>
	</context-param>
	<context-param>
		<param-name>UsersService.serviceProvider</param-name>
		<param-value>org.opentdc.users.file.FileServiceProvider</param-value>
	</context-param>
	<context-param>
		<param-name>WorkRecordsService.serviceProvider</param-name>
		<param-value>org.opentdc.workrecords.file.FileServiceProvider</param-value>
	</context-param>
	<context-param>
		<param-name>WttService.serviceProvider</param-name>
		<param-value>org.opentdc.wtt.file.FileServiceProvider</param-value>
	</context-param>
	<!-- /api/addressbook/ -->
	<servlet>
		<servlet-name>AddressbookService</servlet-name>
		<servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
		<init-param>
			<param-name>jaxrs.serviceClasses</param-name>
			<param-value>org.opentdc.addressbooks.AddressbookService</param-value>
		</init-param>
		<init-param>
			<param-name>jaxrs.providers</param-name>
			<param-value>org.opentdc.addressbooks.AddressbookProvider</param-value>
		</init-param>		
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>AddressbookService</servlet-name>
		<url-pattern>/api/addressbook/*</url-pattern>
	</servlet-mapping>
	<!--/api/rate -->
	<servlet>
		<servlet-name>RatesService</servlet-name>
		<servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
		<init-param>
			<param-name>jaxrs.serviceClasses</param-name>
			<param-value>org.opentdc.rates.RatesService</param-value>
		</init-param>		
		<init-param>
			<param-name>jaxrs.providers</param-name>
			<param-value>org.opentdc.rates.RatesProvider</param-value>
		</init-param>		
		<load-on-startup>1</load-on-startup>	
	</servlet>
	<servlet-mapping>
	   <servlet-name>RatesService</servlet-name>
	   <url-pattern>/api/rate/*</url-pattern>
	</servlet-mapping>
	<!-- /api/resource -->
	<servlet>
		<servlet-name>ResourcesService</servlet-name>
		<servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
		<init-param>
			<param-name>jaxrs.serviceClasses</param-name>
			<param-value>org.opentdc.resources.ResourcesService</param-value>
		</init-param>		
		<init-param>
			<param-name>jaxrs.providers</param-name>
			<param-value>org.opentdc.resources.ResourcesProvider</param-value>
		</init-param>		
		<load-on-startup>1</load-on-startup>	
	</servlet>
	<servlet-mapping>
	   <servlet-name>ResourcesService</servlet-name>
	   <url-pattern>/api/resource/*</url-pattern>
	</servlet-mapping>
	<!-- /api/users -->
	<servlet>
		<servlet-name>UserService</servlet-name>
		<servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
		<init-param>
			<param-name>jaxrs.serviceClasses</param-name>
			<param-value>org.opentdc.users.UserService</param-value>
		</init-param>
		<init-param>
			<param-name>jaxrs.providers</param-name>
			<param-value>org.opentdc.users.UserProvider</param-value>
		</init-param>		
		<load-on-startup>1</load-on-startup>	
	</servlet>
	<servlet-mapping>
	   <servlet-name>UserService</servlet-name>
	   <url-pattern>/api/users/*</url-pattern>
	</servlet-mapping>
	<!-- /api/workrecord -->
	<servlet>
		<servlet-name>WorkRecordsService</servlet-name>
		<servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
		<init-param>
			<param-name>jaxrs.serviceClasses</param-name>
			<param-value>org.opentdc.workrecords.WorkRecordsService</param-value>
		</init-param>		
		<init-param>
			<param-name>jaxrs.providers</param-name>
			<param-value>org.opentdc.workrecords.WorkRecordsProvider</param-value>
		</init-param>		
		<load-on-startup>1</load-on-startup>	
	</servlet>
	<servlet-mapping>
	   <servlet-name>WorkRecordsService</servlet-name>
	   <url-pattern>/api/workrecord/*</url-pattern>
	</servlet-mapping>
	<!-- /api/company -->
	<servlet>
		<display-name>CXF Servlet</display-name>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
		<init-param>
			<param-name>jaxrs.serviceClasses</param-name>
			<param-value>org.opentdc.wtt.WttService</param-value>
		</init-param>
		<init-param>
			<param-name>jaxrs.providers</param-name>
			<param-value>org.opentdc.wtt.WttProvider</param-value>
		</init-param>		
		<load-on-startup>1</load-on-startup>	
	</servlet>
	<servlet-mapping>
	   <servlet-name>CXFServlet</servlet-name>
	   <url-pattern>/api/company/*</url-pattern>
	</servlet-mapping>	
	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
		<init-param>
			<param-name>cors.allowed.origins</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.methods</param-name>
			<param-value>GET,POST,HEAD,DELETE,OPTIONS,PUT</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.headers</param-name>
			<param-value>Authorization,Accept,Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposed.headers</param-name>
			<param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
		</init-param>
		<init-param>
			<param-name>cors.support.credentials</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>cors.preflight.maxage</param-name>
			<param-value>10</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
